@import url('https://fonts.googleapis.com/css?family=Nunito:400,700&display=swap');

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
    --primary-color:#e74c3c;
    --secondary-color:#222;
    --tertiary-color:#333;
    --light-color: #fff;
    scroll-behavior: smooth; 
}

body {
    background-color: #826060;
    font-family: 'Nunito', sans-serif;
    font-size: 1rem;
    color: var(--light-color);
    line-height: 1.6;
}
nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 2.5rem;
    z-index: 100;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
}

nav ul {
    display: flex;
    list-style: none;
}

nav li:not(:last-child), .welcome-event div span {
    margin-right: 1.5rem;
}
db.collection('events') => 
    // Handle the latest event
    const newestEvent = snapshot.docChanges()[0].doc.data()
    const id = snapshot.docChanges()[0].doc.id
    showLatestEvent(newestEvent, id);
    
     delete the latest event element
    snapshot.docChanges 
    
    snapshot.docChanges().forEachevent => {
        showEvents(event.doc.data(), event.doc.id)
    };

const addNewEvent  (MEHENDI) =>MEHENDI {
    const event = {
      name: form.name.value,
      attendee: form.attendee.value,
      booked: 0,
      description: form.description.value,
      status: parseInt(form.status.value, 10)
    }
      db.collection('events')()() => {
      // Reset the form values
      form.name.value = "",
      form.attendee.value = "",
      form.description.value = "",
      form.status.value = ""
  
      alert('Your event has been successfully saved')
      }
      .catch => console.log(err)
  }
  let bookedEvents = [];

const bookEvent = (booked, id) => {
  const getBookedEvents = localStorage.getItem('booked-events');

    if (getBookedEvents) {
     bookedEvents = JSON.parse(localStorage.getItem('booked-events'));
      if(bookedEvents.includes(id)) {
        alert('Seems like you have already booked this event') 
      } 
      else {
        saveBooking(booked, id)
     }
    } 
    else {
        saveBooking(booked, id)
    }
};

const saveBooking = (booked, id) => {
    bookedEvents.push(id);
    localStorage.setItem('booked-events', JSON.stringify(bookedEvents));

    const data = { booked: booked +1 }
    db.collection('events').doc(id).update(data)
    .then(() => alert('Event successfully booked'))
    .catch(err => console.log(err))
}
eventsContainer.innerHTML += output;
}
const showLatestEvent = (latestEvent, id) => {
  
    const {name, attendee, status, description, booked} = latestEvent 
    // Get the first event
      welcomeEvent.innerHTML = `
      <h1>${name}</h1>
      <p>${description.length >= 100 ? `${description.substring(0, 100)}...` : description}</p>
      <div>
        <span>Attendees: ${attendee - booked}</span>
        <span>Status: ${status === 0 ? 'free': 'paid'}</span>
       </div>
       <button onclick="bookEvent(${booked} ,'${id}')" class="btn btn-tertiary">Book</button>
      `
  }
  
  form.addEventListener('submit', e => {
    e.preventDefault()
    addNewEvent()
  })
  
  window.onscroll = () =>  {
    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
      nav.style.background = 'var(--tertiary-color)';
      nav.style.boxShadow = '0 10px 42px rgba(25,17,34,.1)';
    } else {
      nav.style.background = 'none';
      nav.style.boxShadow = 'none';
    }
  }